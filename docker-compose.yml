services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  airflow-init:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    depends_on:
      - postgres
    restart: on-failure
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - airflow-init
    restart: always

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    depends_on:
      - airflow-init
    restart: always

  airflow-worker:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-arm64
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - spark-apps:/opt/spark/work-dir
      - ./airflow/jars:/opt/airflow/jars
      - ./airflow/jars:/opt/spark/jars
      - ./spark-jars:/opt/spark/jars
      - ./spark_scripts:/opt/spark/work-dir

    command: celery worker
    depends_on:
      - airflow-init
    restart: always

  spark:
    image: apache/spark:latest
    ports:
      - "8090:8080"
      - "7077:7077"
    volumes:
      - ./spark-data:/opt/spark/data
      - ./spark-apps:/opt/spark/work-dir
      - ./spark_scripts:/opt/spark/work-dir
#      - ./spark-jars:/opt/spark/jars  # This line is causing spark to not go up for some reason.
    command: "/opt/spark/bin/spark-class org.apache.spark.deploy.master.Master"
#
#  spark-worker:
#    image: apache/spark:latest
#    depends_on:
#      - spark
#    ports:
#      - "8081:8081"
#    volumes:
#      - ./spark-data:/opt/spark/data
#      - ./spark-apps:/opt/spark/work-dir
#      - ./spark_scripts:/opt/spark/work-dir
##      - ./spark-jars:/opt/spark/jars
#    environment:
#      - SPARK_MASTER=spark://spark:7077
#      - SPARK_WORKER_CORES=1
#      - SPARK_WORKER_MEMORY=1G
#    command: "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark:7077"

volumes:
  spark-apps:
    driver: local
  postgres-db-volume:
